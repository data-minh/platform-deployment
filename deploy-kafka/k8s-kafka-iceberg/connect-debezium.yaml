apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: connect-debezium
  namespace: nm-kafka-cdc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: connect-debezium
  template:
    metadata:
      labels:
        app: connect-debezium
    spec:
      containers:
      - name: connect-debezium
        image: minh333/kafka-connect:1.1.1
        ports:
        - containerPort: 8083
        env:
        - name: BOOTSTRAP_SERVERS
          value: "broker:29092"
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: "debezium"
        - name: GROUP_ID
          value: "1"
        - name: CONFIG_STORAGE_TOPIC
          value: "connect_configs_debezium"
        - name: STATUS_STORAGE_TOPIC
          value: "connect_statuses_debezium"
        - name: OFFSET_STORAGE_TOPIC
          value: "connect_offsets_debezium"
        - name: CONNECT_TOPIC_CREATION_ENABLE
          value: "true"
        # - name: KEY_CONVERTER
        #   value: "org.apache.kafka.connect.json.JsonConverter"
        # - name: VALUE_CONVERTER
        #   value: "org.apache.kafka.connect.json.JsonConverter"
        # - name: KEY_CONVERTER
        #   value: "io.confluent.connect.avro.AvroConverter"
        # - name: VALUE_CONVERTER
        #   value: "io.confluent.connect.avro.AvroConverter"
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: "http://schema-registry:8081"
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: "http://schema-registry:8081"
        volumeMounts:
          - mountPath: /kafka/data
            name: connect-debezium-data
  volumeClaimTemplates:
    - metadata:
        name: connect-debezium-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
        storageClassName: worker02-nfs-storageclass

---
apiVersion: v1
kind: Service
metadata:
  name: connect-debezium
  namespace: nm-kafka-cdc
spec:
  ports:
    - port: 8084
      targetPort: 8083
  selector:
    app: connect-debezium
  type: NodePort

